{"dependencies":[{"id":"dart.core","name":"dart:core","children":[{"id":"Object","name":"Object","children":[{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"id":"==1()","name":"==","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","line":"29"},{"returnType":{"name":"String","refId":"dart.core/String"},"id":"toString0()","name":"toString","kind":"method","comment":"\nReturns a string representation of this object.\n","line":"48"},{"id":"noSuchMethod1()","name":"noSuchMethod","children":[{"ref":{"name":"InvocationMirror","refId":"dart.core/InvocationMirror"},"id":"invocation","name":"invocation","kind":"param"}],"kind":"method","comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [InvocationMirror].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","line":"60"},{"ref":{"name":"int","refId":"dart.core/int"},"id":"hashCode","name":"hashCode","kind":"property","comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","line":"43"},{"ref":{"name":"Type","refId":"dart.core/Type"},"id":"runtimeType","name":"runtimeType","kind":"property","comment":"\nA representation of the runtime type of the object.\n","line":"65"},{"id":"Object0()","name":"Object","kind":"constructor","comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","line":"18"}],"uri":"dart-sdk//lib/core/object.dart","kind":"class","comment":"\nEverything in Dart is an [Object].\n","line":"10"}],"uri":"dart-sdk//lib/core/core.dart","kind":"library","line":"5"}],"id":"bignum","name":"file:///auto/homes/drt24/git/upstreams/dart-bignum/lib/bignum.dart","children":[{"id":"pkcs1pad22()","name":"pkcs1pad2","children":[{"id":"s","name":"s","kind":"param"},{"id":"n","name":"n","kind":"param"}],"uri":"file:///auto/homes/drt24/git/upstreams/dart-bignum/lib/src/BigInteger_v8/crypto.dart","kind":"method","line":"134"},{"id":"parseBigInt2()","name":"parseBigInt","children":[{"id":"str","name":"str","kind":"param"},{"id":"r","name":"r","kind":"param"}],"uri":"file:///auto/homes/drt24/git/upstreams/dart-bignum/lib/src/BigInteger_v8/crypto.dart","kind":"method","line":"129"},{"id":"prng_newstate0()","name":"prng_newstate","uri":"file:///auto/homes/drt24/git/upstreams/dart-bignum/lib/src/BigInteger_v8/crypto.dart","kind":"method","line":"42"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"id":"RSAKey","name":"RSAKey","children":[{"id":"setPublic2()","name":"setPublic","children":[{"id":"N","name":"N","kind":"param"},{"id":"E","name":"E","kind":"param"}],"kind":"method","line":"178"},{"id":"doPublic1()","name":"doPublic","children":[{"id":"x","name":"x","kind":"param"}],"kind":"method","line":"191"},{"id":"encrypt1()","name":"encrypt","children":[{"id":"text","name":"text","kind":"param"}],"kind":"method","line":"196"},{"id":"pkcs1unpad22()","name":"pkcs1unpad2","children":[{"id":"d","name":"d","kind":"param"},{"id":"n","name":"n","kind":"param"}],"kind":"method","line":"211"},{"id":"setPrivate3()","name":"setPrivate","children":[{"id":"N","name":"N","kind":"param"},{"id":"E","name":"E","kind":"param"},{"id":"D","name":"D","kind":"param"}],"kind":"method","line":"231"},{"id":"setPrivateEx8()","name":"setPrivateEx","children":[{"id":"N","name":"N","kind":"param"},{"id":"E","name":"E","kind":"param"},{"id":"D","name":"D","kind":"param"},{"id":"P","name":"P","kind":"param"},{"id":"Q","name":"Q","kind":"param"},{"id":"DP","name":"DP","kind":"param"},{"id":"DQ","name":"DQ","kind":"param"},{"id":"C","name":"C","kind":"param"}],"kind":"method","line":"244"},{"id":"generate2()","name":"generate","children":[{"id":"B","name":"B","kind":"param"},{"id":"E","name":"E","kind":"param"}],"kind":"method","line":"262"},{"id":"doPrivate1()","name":"doPrivate","children":[{"id":"x","name":"x","kind":"param"}],"kind":"method","line":"297"},{"id":"decrypt1()","name":"decrypt","children":[{"id":"ctext","name":"ctext","kind":"param"}],"kind":"method","line":"314"},{"id":"n","name":"n","kind":"variable","line":"156"},{"id":"e","name":"e","kind":"variable","line":"157"},{"id":"d","name":"d","kind":"variable","line":"158"},{"id":"p","name":"p","kind":"variable","line":"159"},{"id":"q","name":"q","kind":"variable","line":"160"},{"id":"dmp1","name":"dmp1","kind":"variable","line":"161"},{"id":"dmq1","name":"dmq1","kind":"variable","line":"162"},{"id":"coeff","name":"coeff","kind":"variable","line":"163"},{"id":"RSAKey0()","name":"RSAKey","kind":"constructor","line":"166"}],"uri":"file:///auto/homes/drt24/git/upstreams/dart-bignum/lib/src/BigInteger_v8/crypto.dart","kind":"class","line":"155"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"id":"SecureRandom","name":"SecureRandom","children":[{"id":"rng_seed_int1()","name":"rng_seed_int","children":[{"id":"x","name":"x","kind":"param"}],"kind":"method","line":"69"},{"id":"rng_seed_time0()","name":"rng_seed_time","kind":"method","line":"78"},{"id":"rng_pool_init0()","name":"rng_pool_init","kind":"method","line":"86"},{"id":"rng_get_byte0()","name":"rng_get_byte","kind":"method","line":"106"},{"id":"nextBytes1()","name":"nextBytes","children":[{"id":"ba","name":"ba","kind":"param"}],"kind":"method","line":"122"},{"ref":{"name":"Random","refId":"dart.math/Random"},"id":"rng","name":"rng","kind":"variable","line":"48"},{"id":"rng_psize","name":"rng_psize","kind":"variable","line":"57"},{"id":"rng_state","name":"rng_state","kind":"variable","line":"64"},{"id":"rng_pool","name":"rng_pool","kind":"variable","line":"65"},{"id":"rng_pptr","name":"rng_pptr","kind":"variable","line":"66"},{"id":"SecureRandom0()","name":"SecureRandom","kind":"constructor","line":"49"}],"uri":"file:///auto/homes/drt24/git/upstreams/dart-bignum/lib/src/BigInteger_v8/crypto.dart","kind":"class","line":"47"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"id":"Arcfour","name":"Arcfour","children":[{"id":"init1()","name":"init","children":[{"id":"key","name":"key","kind":"param"}],"kind":"method","line":"14"},{"id":"next0()","name":"next","kind":"method","line":"30"},{"id":"i","name":"i","kind":"variable","line":"4"},{"id":"j","name":"j","kind":"variable","line":"5"},{"ref":{"name":"Map","refId":"dart.core/Map"},"id":"S","name":"S","kind":"variable","line":"6"},{"id":"Arcfour0()","name":"Arcfour","kind":"constructor","line":"7"}],"uri":"file:///auto/homes/drt24/git/upstreams/dart-bignum/lib/src/BigInteger_v8/crypto.dart","kind":"class","line":"3"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"id":"BigInteger","name":"BigInteger","children":[{"isStatic":true,"returnType":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"nbi0()","name":"nbi","kind":"method","comment":"Create a new [BigInteger] ","line":"268"},{"isStatic":true,"returnType":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"nbv1()","name":"nbv","children":[{"ref":{"name":"int","refId":"dart.core/int"},"id":"i","name":"i","kind":"param"}],"kind":"method","comment":"return [BigInteger] initialized to [i] ","line":"270"},{"id":"_am36()","name":"_am3","children":[{"id":"i","name":"i","kind":"param"},{"id":"x","name":"x","kind":"param"},{"id":"w","name":"w","kind":"param"},{"id":"j","name":"j","kind":"param"},{"id":"c","name":"c","kind":"param"},{"id":"n","name":"n","kind":"param"}],"kind":"method","comment":"\nAlternately, set max digit bits to 28 since some\nbrowsers slow down when dealing with 32-bit numbers.\n","isPrivate":true,"line":"366"},{"id":"_am46()","name":"_am4","children":[{"id":"i","name":"i","kind":"param"},{"id":"x","name":"x","kind":"param"},{"id":"w","name":"w","kind":"param"},{"id":"j","name":"j","kind":"param"},{"id":"c","name":"c","kind":"param"},{"id":"n","name":"n","kind":"param"}],"kind":"method","isPrivate":true,"line":"381"},{"id":"_setupEngine2()","name":"_setupEngine","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"id":"fn","name":"fn","kind":"param"},{"ref":{"name":"int","refId":"dart.core/int"},"id":"bits","name":"bits","kind":"param"}],"kind":"method","comment":"\nam3/28 is best for SM, Rhino, but am4/26 is best for v8.\nKestrel (Opera 9.5) gets its best result with am4/26.\nIE7 does 9% better with am3/28 than with am4/26.\nFirefox (SM) gets 10% faster with am3/28 than with am4/26.\n","isPrivate":true,"line":"403"},{"id":"_setupDigitConversions0()","name":"_setupDigitConversions","kind":"method","comment":"Digit conversions ","isPrivate":true,"line":"418"},{"id":"_int2char1()","name":"_int2char","children":[{"id":"n","name":"n","kind":"param"}],"kind":"method","isPrivate":true,"line":"431"},{"id":"_intAt2()","name":"_intAt","children":[{"id":"s","name":"s","kind":"param"},{"id":"i","name":"i","kind":"param"}],"kind":"method","isPrivate":true,"line":"435"},{"returnType":{"name":"void","refId":"void"},"id":"copyTo1()","name":"copyTo","children":[{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"r","name":"r","kind":"param"}],"kind":"method","comment":"copy [this] to [r] ","line":"441"},{"returnType":{"name":"void","refId":"void"},"id":"fromInt1()","name":"fromInt","children":[{"ref":{"name":"int","refId":"dart.core/int"},"id":"x","name":"x","kind":"param"}],"kind":"method","comment":"set from integer value [x], -[BI_DV] <= [x] < [BI_DV] ","line":"451"},{"returnType":{"name":"void","refId":"void"},"id":"fromString2()","name":"fromString","children":[{"id":"s","name":"s","kind":"param"},{"ref":{"name":"int","refId":"dart.core/int"},"id":"b","name":"b","kind":"param"}],"kind":"method","comment":"set from string [s] and radix [b] ","line":"462"},{"returnType":{"name":"String","refId":"dart.core/String"},"id":"toString1()","name":"toString","children":[{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"id":"b","name":"b","kind":"param"}],"kind":"method","comment":"return string representation in given radix [b] ","line":"504"},{"id":"negate_op0()","name":"negate_op","kind":"method","comment":"-this ","line":"539"},{"returnType":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"abs0()","name":"abs","kind":"method","comment":"|this| ","line":"546"},{"returnType":{"name":"int","refId":"dart.core/int"},"id":"compareTo1()","name":"compareTo","children":[{"id":"a","name":"a","kind":"param"}],"kind":"method","comment":"return + if [this] > [a], - if [this] < [a], 0 if equal *","line":"551"},{"returnType":{"name":"int","refId":"dart.core/int"},"id":"nbits1()","name":"nbits","children":[{"id":"x","name":"x","kind":"param"}],"kind":"method","comment":"returns bit length of the integer [x] ","line":"565"},{"returnType":{"name":"int","refId":"dart.core/int"},"id":"bitLength0()","name":"bitLength","kind":"method","comment":"return the number of bits in [this] ","line":"579"},{"returnType":{"name":"void","refId":"void"},"id":"dlShiftTo2()","name":"dlShiftTo","children":[{"id":"n","name":"n","kind":"param"},{"id":"r","name":"r","kind":"param"}],"kind":"method","comment":"r = this << n*DB ","line":"586"},{"returnType":{"name":"void","refId":"void"},"id":"drShiftTo2()","name":"drShiftTo","children":[{"id":"n","name":"n","kind":"param"},{"id":"r","name":"r","kind":"param"}],"kind":"method","comment":"r = this >> n*DB ","line":"597"},{"returnType":{"name":"void","refId":"void"},"id":"lShiftTo2()","name":"lShiftTo","children":[{"id":"n","name":"n","kind":"param"},{"id":"r","name":"r","kind":"param"}],"kind":"method","comment":"r = this << n ","line":"606"},{"returnType":{"name":"void","refId":"void"},"id":"rShiftTo2()","name":"rShiftTo","children":[{"id":"n","name":"n","kind":"param"},{"id":"r","name":"r","kind":"param"}],"kind":"method","comment":"r = this >> n ","line":"628"},{"returnType":{"name":"void","refId":"void"},"id":"clamp0()","name":"clamp","kind":"method","comment":"clamp off excess high words ","line":"653"},{"returnType":{"name":"void","refId":"void"},"id":"subTo2()","name":"subTo","children":[{"id":"a","name":"a","kind":"param"},{"id":"r","name":"r","kind":"param"}],"kind":"method","comment":"r = this - a ","line":"663"},{"id":"_dump_state1()","name":"_dump_state","children":[{"id":"a","name":"a","kind":"param"}],"kind":"method","isPrivate":true,"line":"719"},{"returnType":{"name":"void","refId":"void"},"id":"multiplyTo2()","name":"multiplyTo","children":[{"id":"a","name":"a","kind":"param"},{"id":"r","name":"r","kind":"param"}],"kind":"method","comment":"\nr = this * a, r != this,a (HAC 14.12)\n[this] should be the larger one if appropriate.\n","line":"729"},{"returnType":{"name":"void","refId":"void"},"id":"squareTo1()","name":"squareTo","children":[{"id":"r","name":"r","kind":"param"}],"kind":"method","comment":"r = this^2, r != this (HAC 14.16) ","line":"749"},{"id":"divRemTo3()","name":"divRemTo","children":[{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"m","name":"m","kind":"param"},{"id":"q","name":"q","kind":"param"},{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"r","name":"r","kind":"param"}],"kind":"method","comment":"\ndivide this by m, quotient and remainder to q, r (HAC 14.20)\nr != q, this != m.  q or r may be null.\n","line":"772"},{"id":"mod1()","name":"mod","children":[{"id":"a","name":"a","kind":"param"}],"kind":"method","comment":"this mod a ","line":"828"},{"id":"invDigit0()","name":"invDigit","kind":"method","comment":"\nreturn \"-1/this % 2^DB\"; useful for Mont. reduction\njustification:\n        xy == 1 (mod m)\n        xy =  1+km\n  xy(2-xy) = (1+km)(1-km)\nx[y(2-xy)] = 1-k^2m^2\nx[y(2-xy)] == 1 (mod m^2)\nif y is 1/x mod m, then y(2-xy) is 1/x mod m^2\nshould reduce x and y(2-xy) by m^2 at each step to keep size bounded.\nJS multiply \"overflows\" differently from C/C++, so care is needed here.\n","line":"847"},{"id":"isEven0()","name":"isEven","kind":"method","comment":"true iff [this] is even ","line":"864"},{"returnType":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"exp2()","name":"exp","children":[{"ref":{"name":"int","refId":"dart.core/int"},"id":"e","name":"e","kind":"param"},{"id":"z","name":"z","kind":"param"}],"kind":"method","comment":"this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79) ","line":"870"},{"returnType":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"modPowInt2()","name":"modPowInt","children":[{"ref":{"name":"int","refId":"dart.core/int"},"id":"e","name":"e","kind":"param"},{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"m","name":"m","kind":"param"}],"kind":"method","comment":" this^e % m, 0 <= e < 2^32 ","line":"889"},{"id":"clone0()","name":"clone","kind":"method","comment":"clone ","line":"901"},{"returnType":{"name":"int","refId":"dart.core/int"},"id":"intValue0()","name":"intValue","kind":"method","comment":"return value as integer ","line":"908"},{"id":"byteValue0()","name":"byteValue","kind":"method","comment":"return value as byte ","line":"921"},{"id":"shortValue0()","name":"shortValue","kind":"method","comment":"return value as short (assumes DB>=16) ","line":"927"},{"returnType":{"name":"int","refId":"dart.core/int"},"id":"chunkSize1()","name":"chunkSize","children":[{"id":"r","name":"r","kind":"param"}],"kind":"method","comment":"return x s.t. r^x < DV ","line":"933"},{"returnType":{"name":"int","refId":"dart.core/int"},"id":"signum0()","name":"signum","kind":"method","comment":"0 if this == 0, 1 if this > 0 ","line":"938"},{"returnType":{"name":"String","refId":"dart.core/String"},"id":"toRadix1()","name":"toRadix","children":[{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"10","isOptional":true,"id":"b","name":"b","kind":"param"}],"kind":"method","comment":"convert to radix string , http://dartbug.com/461 num only supports up to radix 16 ","line":"950"},{"returnType":{"name":"void","refId":"void"},"id":"fromRadix2()","name":"fromRadix","children":[{"id":"s","name":"s","kind":"param"},{"id":"b","name":"b","kind":"param"}],"kind":"method","comment":"convert from radix string ","line":"967"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"id":"toByteArray0()","name":"toByteArray","kind":"method","comment":"\nconvert to bigendian byte array [List]\n","line":"1050"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"id":"equals1()","name":"equals","children":[{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"a","name":"a","kind":"param"}],"kind":"method","line":"1077"},{"returnType":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"min1()","name":"min","children":[{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"a","name":"a","kind":"param"}],"kind":"method","line":"1081"},{"returnType":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"max1()","name":"max","children":[{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"a","name":"a","kind":"param"}],"kind":"method","line":"1085"},{"returnType":{"name":"void","refId":"void"},"id":"bitwiseTo3()","name":"bitwiseTo","children":[{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"a","name":"a","kind":"param"},{"ref":{"name":"Function","refId":"dart.core/Function"},"id":"op","name":"op","kind":"param"},{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"r","name":"r","kind":"param"}],"kind":"method","comment":"r = this op a (bitwise) ","line":"1091"},{"id":"op_and2()","name":"op_and","children":[{"id":"x","name":"x","kind":"param"},{"id":"y","name":"y","kind":"param"}],"kind":"method","comment":"this & a ","line":"1113"},{"id":"and1()","name":"and","children":[{"id":"a","name":"a","kind":"param"}],"kind":"method","line":"1114"},{"id":"op_or2()","name":"op_or","children":[{"id":"x","name":"x","kind":"param"},{"id":"y","name":"y","kind":"param"}],"kind":"method","comment":"this | a ","line":"1121"},{"id":"or1()","name":"or","children":[{"id":"a","name":"a","kind":"param"}],"kind":"method","line":"1125"},{"id":"op_xor2()","name":"op_xor","children":[{"id":"x","name":"x","kind":"param"},{"id":"y","name":"y","kind":"param"}],"kind":"method","comment":"this ^ a ","line":"1132"},{"id":"xor1()","name":"xor","children":[{"id":"a","name":"a","kind":"param"}],"kind":"method","line":"1133"},{"id":"op_andnot2()","name":"op_andnot","children":[{"id":"x","name":"x","kind":"param"},{"id":"y","name":"y","kind":"param"}],"kind":"method","comment":"this & ~a ","line":"1140"},{"id":"andNot1()","name":"andNot","children":[{"id":"a","name":"a","kind":"param"}],"kind":"method","line":"1141"},{"id":"not0()","name":"not","kind":"method","comment":"~this ","line":"1148"},{"id":"shiftLeft1()","name":"shiftLeft","children":[{"id":"n","name":"n","kind":"param"}],"kind":"method","comment":"this << n ","line":"1164"},{"id":"shiftRight1()","name":"shiftRight","children":[{"id":"n","name":"n","kind":"param"}],"kind":"method","comment":"this >> n ","line":"1175"},{"id":"lbit1()","name":"lbit","children":[{"id":"x","name":"x","kind":"param"}],"kind":"method","comment":"return index of lowest 1-bit in x, x < 2^31 ","line":"1186"},{"id":"getLowestSetBit0()","name":"getLowestSetBit","kind":"method","comment":"returns index of lowest 1-bit (or -1 if none) ","line":"1198"},{"id":"cbit1()","name":"cbit","children":[{"id":"x","name":"x","kind":"param"}],"kind":"method","comment":"return number of 1 bits in x ","line":"1207"},{"id":"bitCount0()","name":"bitCount","kind":"method","comment":"return number of set bits ","line":"1214"},{"id":"testBit1()","name":"testBit","children":[{"id":"n","name":"n","kind":"param"}],"kind":"method","comment":"true iff nth bit is set ","line":"1222"},{"id":"changeBit2()","name":"changeBit","children":[{"id":"n","name":"n","kind":"param"},{"id":"op","name":"op","kind":"param"}],"kind":"method","comment":"this op (1<<n) ","line":"1230"},{"id":"setBit1()","name":"setBit","children":[{"id":"n","name":"n","kind":"param"}],"kind":"method","comment":"this | (1<<n) ","line":"1237"},{"id":"clearBit1()","name":"clearBit","children":[{"id":"n","name":"n","kind":"param"}],"kind":"method","comment":"this & ~(1<<n) ","line":"1240"},{"id":"flipBit1()","name":"flipBit","children":[{"id":"n","name":"n","kind":"param"}],"kind":"method","comment":"this ^ (1<<n) ","line":"1243"},{"id":"addTo2()","name":"addTo","children":[{"id":"a","name":"a","kind":"param"},{"id":"r","name":"r","kind":"param"}],"kind":"method","comment":"r = this + a ","line":"1246"},{"returnType":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"add1()","name":"add","children":[{"id":"a","name":"a","kind":"param"}],"kind":"method","comment":"this + a ","line":"1282"},{"returnType":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"subtract1()","name":"subtract","children":[{"id":"a","name":"a","kind":"param"}],"kind":"method","comment":"this - a ","line":"1289"},{"returnType":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"multiply1()","name":"multiply","children":[{"id":"a","name":"a","kind":"param"}],"kind":"method","comment":"this * a ","line":"1296"},{"returnType":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"divide1()","name":"divide","children":[{"id":"a","name":"a","kind":"param"}],"kind":"method","comment":"this / a ","line":"1303"},{"returnType":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"remainder1()","name":"remainder","children":[{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"a","name":"a","kind":"param"}],"kind":"method","comment":"this % a ","line":"1310"},{"returnType":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"int","refId":"dart.core/int"},{"name":"BigInteger","refId":"bignum/BigInteger"}]},"id":"divideAndRemainder1()","name":"divideAndRemainder","children":[{"id":"a","name":"a","kind":"param"}],"kind":"method","comment":"[this/a, this%a] returns Map<BigInteger>\n[0] = this/a\n[1] = this%a\n","line":"1320"},{"id":"dMultiply1()","name":"dMultiply","children":[{"id":"n","name":"n","kind":"param"}],"kind":"method","comment":"this *= n, this >= 0, 1 < n < [BI_DV] ","line":"1331"},{"id":"dAddOffset2()","name":"dAddOffset","children":[{"id":"n","name":"n","kind":"param"},{"id":"w","name":"w","kind":"param"}],"kind":"method","comment":"this += n << w words, this >= 0 ","line":"1339"},{"returnType":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"pow1()","name":"pow","children":[{"ref":{"name":"int","refId":"dart.core/int"},"id":"e","name":"e","kind":"param"}],"kind":"method","comment":"this^e ","line":"1351"},{"id":"multiplyLowerTo3()","name":"multiplyLowerTo","children":[{"id":"a","name":"a","kind":"param"},{"id":"n","name":"n","kind":"param"},{"id":"r","name":"r","kind":"param"}],"kind":"method","comment":"\nr = lower n words of \"this * a\", a.t <= n\n\"this\" should be the larger one if appropriate.\n","line":"1360"},{"id":"multiplyUpperTo3()","name":"multiplyUpperTo","children":[{"id":"a","name":"a","kind":"param"},{"id":"n","name":"n","kind":"param"},{"id":"r","name":"r","kind":"param"}],"kind":"method","comment":"\nr = \"this * a\" without lower n words, n > 0\n\"this\" should be the larger one if appropriate.\n","line":"1377"},{"id":"modPow2()","name":"modPow","children":[{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"e","name":"e","kind":"param"},{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"m","name":"m","kind":"param"}],"kind":"method","comment":"this^e % m (HAC 14.85) ","line":"1393"},{"id":"gcd1()","name":"gcd","children":[{"id":"a","name":"a","kind":"param"}],"kind":"method","comment":"gcd(this,a) (HAC 14.54) ","line":"1457"},{"returnType":{"name":"int","refId":"dart.core/int"},"id":"modInt1()","name":"modInt","children":[{"ref":{"name":"int","refId":"dart.core/int"},"id":"n","name":"n","kind":"param"}],"kind":"method","comment":"this % n, n < 2^26 ","line":"1485"},{"returnType":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"modInverse1()","name":"modInverse","children":[{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"m","name":"m","kind":"param"}],"kind":"method","comment":"1/this % m (HAC 14.61) ","line":"1498"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"id":"isProbablePrime1()","name":"isProbablePrime","children":[{"ref":{"name":"int","refId":"dart.core/int"},"id":"t","name":"t","kind":"param"}],"kind":"method","comment":"test primality with certainty >= 1-.5^t ","line":"1541"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"id":"millerRabin1()","name":"millerRabin","children":[{"id":"t","name":"t","kind":"param"}],"kind":"method","comment":"true if probably prime (HAC 4.24, Miller-Rabin) ","line":"1561"},{"isOperator":true,"returnType":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"+1()","name":"+","children":[{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"other","name":"other","kind":"param"}],"kind":"method","line":"1586"},{"isOperator":true,"returnType":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"-1()","name":"-","children":[{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"other","name":"other","kind":"param"}],"kind":"method","line":"1587"},{"isOperator":true,"returnType":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"*1()","name":"*","children":[{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"other","name":"other","kind":"param"}],"kind":"method","line":"1588"},{"isOperator":true,"returnType":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"%1()","name":"%","children":[{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"other","name":"other","kind":"param"}],"kind":"method","line":"1589"},{"isOperator":true,"returnType":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"#slash1()","name":"/","children":[{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"other","name":"other","kind":"param"}],"kind":"method","line":"1590"},{"isOperator":true,"returnType":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"~#slash1()","name":"~/","children":[{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"other","name":"other","kind":"param"}],"kind":"method","line":"1593"},{"isOperator":true,"returnType":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"unary-0()","name":"unary-","kind":"method","line":"1596"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"id":"<1()","name":"<","children":[{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"other","name":"other","kind":"param"}],"kind":"method","line":"1602"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"id":"<=1()","name":"<=","children":[{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"other","name":"other","kind":"param"}],"kind":"method","line":"1603"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"id":">1()","name":">","children":[{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"other","name":"other","kind":"param"}],"kind":"method","line":"1604"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"id":">=1()","name":">=","children":[{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"other","name":"other","kind":"param"}],"kind":"method","line":"1605"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"id":"==1()","name":"==","children":[{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"other","name":"other","kind":"param"}],"kind":"method","line":"1606"},{"isOperator":true,"returnType":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"&1()","name":"&","children":[{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"other","name":"other","kind":"param"}],"kind":"method","line":"1609"},{"isOperator":true,"returnType":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"|1()","name":"|","children":[{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"other","name":"other","kind":"param"}],"kind":"method","line":"1610"},{"isOperator":true,"returnType":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"^1()","name":"^","children":[{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"other","name":"other","kind":"param"}],"kind":"method","line":"1611"},{"isOperator":true,"returnType":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"~0()","name":"~","kind":"method","line":"1612"},{"isOperator":true,"returnType":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"<<1()","name":"<<","children":[{"ref":{"name":"int","refId":"dart.core/int"},"id":"shiftAmount","name":"shiftAmount","kind":"param"}],"kind":"method","line":"1613"},{"isOperator":true,"returnType":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":">>1()","name":">>","children":[{"ref":{"name":"int","refId":"dart.core/int"},"id":"shiftAmount","name":"shiftAmount","kind":"param"}],"kind":"method","line":"1614"},{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"isStatic":true,"id":"ZERO","name":"ZERO","kind":"property","line":"276"},{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"isStatic":true,"id":"ONE","name":"ONE","kind":"property","line":"277"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"id":"dbits","name":"dbits","kind":"variable","line":"257"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"id":"BI_DB","name":"BI_DB","kind":"variable","line":"258"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"id":"BI_DM","name":"BI_DM","kind":"variable","line":"259"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"id":"BI_DV","name":"BI_DV","kind":"variable","line":"260"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"id":"BI_FP","name":"BI_FP","kind":"variable","line":"262"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"id":"BI_FV","name":"BI_FV","kind":"variable","line":"263"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"id":"BI_F1","name":"BI_F1","kind":"variable","line":"264"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"id":"BI_F2","name":"BI_F2","kind":"variable","line":"265"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"id":"_lowprimes","name":"_lowprimes","kind":"variable","isPrivate":true,"line":"282"},{"ref":{"name":"int","refId":"dart.core/int"},"id":"_lplim","name":"_lplim","kind":"variable","isPrivate":true,"line":"283"},{"ref":{"name":"int","refId":"dart.core/int"},"id":"canary","name":"canary","kind":"variable","line":"286"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"_j_lm","name":"_j_lm","kind":"variable","isPrivate":true,"line":"287"},{"ref":{"name":"JSArray","refId":"bignum/JSArray","arguments":[{"name":"int","refId":"dart.core/int"}]},"id":"array","name":"array","kind":"variable","line":"292"},{"ref":{"name":"Function","refId":"dart.core/Function"},"id":"am","name":"am","kind":"variable","line":"294"},{"id":"BI_RM","name":"BI_RM","kind":"variable","line":"296"},{"ref":{"name":"Map","refId":"dart.core/Map"},"id":"BI_RC","name":"BI_RC","kind":"variable","line":"297"},{"ref":{"name":"int","refId":"dart.core/int"},"id":"t","name":"t","kind":"variable","line":"299"},{"id":"s","name":"s","kind":"variable","line":"300"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"_debugging","name":"_debugging","kind":"variable","isPrivate":true,"line":"718"},{"id":"BigInteger3()","name":"BigInteger","children":[{"isOptional":true,"id":"a","name":"a","kind":"param"},{"isOptional":true,"id":"b","name":"b","kind":"param"},{"isOptional":true,"id":"c","name":"c","kind":"param"}],"kind":"constructor","comment":"\nConstructor of [BigInteger]\n\nConstructor can be called in mutiple ways\n\n1) Passing byte array [List]\n   var x = new BigInteger([0x5]);\n   x.toString() == \"5\";\n\n2) Passing [int]\n   int i = 5;\n   var x = new BigInteger(i);\n   x.toString() == \"5\";\n\n3) Passing [num]\n   num i = 5;\n   var x = new BigInteger(i);\n   x.toString() == \"5\";\n\n4) Passing [double]\n   double i = 5.0;\n   var x = new BigInteger(i);\n   x.toString() == \"5\";\n\n5) Passing [String] with optional base [int]\n   String s = \"5\";\n   var x = new BigInteger(s);\n   x.toString() == \"5\";\n\n   String s = \"beef\";\n   var x = new BigInteger(s);\n   x.toString() == \"beef\";\n","line":"335"}],"uri":"file:///auto/homes/drt24/git/upstreams/dart-bignum/lib/src/BigInteger_v8/big_integer.dart","kind":"class","comment":"\nBasic dart [BigInteger] class. Implementation works across\ndart and dart2js.\n","line":"255"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"id":"JSArray","name":"JSArray","children":[{"isOperator":true,"id":"[]1()","name":"[]","children":[{"id":"index","name":"index","kind":"param"}],"kind":"method","line":"237"},{"isOperator":true,"id":"[]=2()","name":"[]=","children":[{"id":"index","name":"index","kind":"param"},{"id":"value","name":"value","kind":"param"}],"kind":"method","line":"241"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"T","refId":"bignum/JSArray/T"}]},"id":"data","name":"data","kind":"variable","line":"248"},{"id":"T","name":"T","kind":"typeparam"}],"uri":"file:///auto/homes/drt24/git/upstreams/dart-bignum/lib/src/BigInteger_v8/big_integer.dart","kind":"class","comment":"\nThis class wraps a Dart List and provides a JS-like behaviour.\ni.e. Storing an out-of-bounds element grows the list automatically.\n","line":"236"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"id":"NullExp","name":"NullExp","children":[{"id":"convert1()","name":"convert","children":[{"id":"x","name":"x","kind":"param"}],"kind":"method","line":"224"},{"id":"revert1()","name":"revert","children":[{"id":"x","name":"x","kind":"param"}],"kind":"method","line":"225"},{"id":"mulTo3()","name":"mulTo","children":[{"id":"x","name":"x","kind":"param"},{"id":"y","name":"y","kind":"param"},{"id":"r","name":"r","kind":"param"}],"kind":"method","line":"226"},{"id":"sqrTo2()","name":"sqrTo","children":[{"id":"x","name":"x","kind":"param"},{"id":"r","name":"r","kind":"param"}],"kind":"method","line":"227"},{"id":"NullExp0()","name":"NullExp","kind":"constructor","line":"223"}],"uri":"file:///auto/homes/drt24/git/upstreams/dart-bignum/lib/src/BigInteger_v8/big_integer.dart","kind":"class","line":"222"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"id":"Barrett","name":"Barrett","children":[{"returnType":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"convert1()","name":"convert","children":[{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"x","name":"x","kind":"param"}],"kind":"method","line":"170"},{"id":"revert1()","name":"revert","children":[{"id":"x","name":"x","kind":"param"}],"kind":"method","line":"183"},{"returnType":{"name":"void","refId":"void"},"id":"reduce1()","name":"reduce","children":[{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"x","name":"x","kind":"param"}],"kind":"method","comment":"\nx = x mod m (HAC 14.42)\n","line":"190"},{"id":"sqrTo2()","name":"sqrTo","children":[{"id":"x","name":"x","kind":"param"},{"id":"r","name":"r","kind":"param"}],"kind":"method","comment":"\nr = x^2 mod m; x != r\n","line":"213"},{"id":"mulTo3()","name":"mulTo","children":[{"id":"x","name":"x","kind":"param"},{"id":"y","name":"y","kind":"param"},{"id":"r","name":"r","kind":"param"}],"kind":"method","comment":"\nr = x*y mod m; x,y != r\n","line":"218"},{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"m","name":"m","kind":"variable","line":"153"},{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"r2","name":"r2","kind":"variable","line":"154"},{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"q3","name":"q3","kind":"variable","line":"155"},{"id":"mu","name":"mu","kind":"variable","line":"156"},{"id":"Barrett1()","name":"Barrett","children":[{"initializedField":{"name":"m","refId":"bignum/Barrett/m"},"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"m","name":"m","kind":"param"}],"kind":"constructor","comment":"\nBarrett modular reduction\n","line":"161"}],"uri":"file:///auto/homes/drt24/git/upstreams/dart-bignum/lib/src/BigInteger_v8/big_integer.dart","kind":"class","comment":"\nBarrett modular reduction\n","line":"151"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"id":"Montgomery","name":"Montgomery","children":[{"returnType":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"convert1()","name":"convert","children":[{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"x","name":"x","kind":"param"}],"kind":"method","comment":"\nxR mod m\n","line":"84"},{"returnType":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"revert1()","name":"revert","children":[{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"x","name":"x","kind":"param"}],"kind":"method","comment":"\nx/R mod m\n","line":"95"},{"returnType":{"name":"void","refId":"void"},"id":"reduce1()","name":"reduce","children":[{"id":"x","name":"x","kind":"param"}],"kind":"method","comment":"\nx = x/R mod m (HAC 14.32)\n","line":"105"},{"id":"sqrTo2()","name":"sqrTo","children":[{"id":"x","name":"x","kind":"param"},{"id":"r","name":"r","kind":"param"}],"kind":"method","comment":"\nr = \"x^2/R mod m\"; x != r\n","line":"134"},{"id":"mulTo3()","name":"mulTo","children":[{"id":"x","name":"x","kind":"param"},{"id":"y","name":"y","kind":"param"},{"id":"r","name":"r","kind":"param"}],"kind":"method","comment":"\nr = \"xy/R mod m\"; x,y != r\n","line":"142"},{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"m","name":"m","kind":"variable","line":"62"},{"id":"mp","name":"mp","kind":"variable","line":"64"},{"id":"mpl","name":"mpl","kind":"variable","line":"65"},{"id":"mph","name":"mph","kind":"variable","line":"66"},{"id":"um","name":"um","kind":"variable","line":"67"},{"id":"mt2","name":"mt2","kind":"variable","line":"68"},{"id":"Montgomery1()","name":"Montgomery","children":[{"initializedField":{"name":"m","refId":"bignum/Montgomery/m"},"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"m","name":"m","kind":"param"}],"kind":"constructor","comment":"\nMontgomery reduction\n","line":"73"}],"uri":"file:///auto/homes/drt24/git/upstreams/dart-bignum/lib/src/BigInteger_v8/big_integer.dart","kind":"class","comment":"\nMontgomery reduction on [BigInteger]\n","line":"60"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"id":"Classic","name":"Classic","children":[{"id":"convert1()","name":"convert","children":[{"id":"x","name":"x","kind":"param"}],"kind":"method","line":"46"},{"id":"revert1()","name":"revert","children":[{"id":"x","name":"x","kind":"param"}],"kind":"method","line":"51"},{"id":"reduce1()","name":"reduce","children":[{"id":"x","name":"x","kind":"param"}],"kind":"method","line":"52"},{"id":"mulTo3()","name":"mulTo","children":[{"id":"x","name":"x","kind":"param"},{"id":"y","name":"y","kind":"param"},{"id":"r","name":"r","kind":"param"}],"kind":"method","line":"53"},{"id":"sqrTo2()","name":"sqrTo","children":[{"id":"x","name":"x","kind":"param"},{"id":"r","name":"r","kind":"param"}],"kind":"method","line":"54"},{"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"m","name":"m","kind":"variable","line":"43"},{"id":"Classic1()","name":"Classic","children":[{"initializedField":{"name":"m","refId":"bignum/Classic/m"},"ref":{"name":"BigInteger","refId":"bignum/BigInteger"},"id":"m","name":"m","kind":"param"}],"kind":"constructor","line":"45"}],"uri":"file:///auto/homes/drt24/git/upstreams/dart-bignum/lib/src/BigInteger_v8/big_integer.dart","kind":"class","comment":"\nModular reduction using \"classic\" algorithm on [BigInteger]\n","line":"41"}],"uri":"file:///auto/homes/drt24/git/upstreams/dart-bignum/lib/bignum.dart","kind":"library","line":"1"}